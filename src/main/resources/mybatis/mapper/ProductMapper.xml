<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.webshop.dao.ProductMapper">
    <!--插入一条记录，返回主键值-->
    <insert id="add" parameterType="product" useGeneratedKeys="true">
        insert into t_product(productName,subTitle,originalPrice,promotePrice,stock,cid,createDate)
        values(#{productName} ,#{subTitle} ,#{originalPrice},#{promotePrice} ,#{stock} ,#{categoryId} ,#{createDate})
        <selectKey keyColumn="productId" keyProperty="productId" resultType="java.lang.Integer" order="AFTER"
                   statementType="PREPARED">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <delete id="delete" parameterType="product">
        delete from t_product where productId=#{productId}
    </delete>

    <update id="update" parameterType="product">
        update t_product
        <set>
            <if test="productName!=null and productName!=''">
                productName=#{productName} ,
            </if>
            <if test="subTitle!=null and subTitle!=''">
                subTitle=#{subTitle} ,
            </if>
            <if test="originalPrice!=null and originalPrice!=''">
                originalPrice=#{originalPrice} ,
            </if>
            <if test="promotePrice!=null and promotePrice!=''">
                promotePrice=#{promotePrice} ,
            </if>
            <if test="stock!=null and stock!=''">
                stock=#{stock} ,
            </if>

        </set>
        where productId=#{productId}
    </update>

    <resultMap id="listWithLimit" type="product">
        <id property="productId" column="productId"></id>
        <result property="productName" column="productName"></result>
        <result property="subTitle" column="subTitle"></result>
        <result property="originalPrice" column="originalPrice"></result>
        <result property="promotePrice" column="promotePrice"></result>
        <result property="stock" column="stock"></result>
        <result property="categoryId" column="categoryId"></result>
        <result property="createDate" column="createDate"></result>
        <association javaType="category" column="cid" property="category"
                     select="com.github.webshop.dao.CategoryMapper.findById"></association>
    </resultMap>
    <select id="findAllWithLimit" parameterType="row" resultMap="listWithLimit">
        select * from t_product limit #{start},#{limit}
    </select>

    <select id="findAllWithCategoryByProductId" resultMap="listWithLimit" parameterType="integer">
        select * from t_product where productId=#{productId}
    </select>

    <select id="findById" parameterType="integer" resultType="product">
        select * from t_product where productId=#{productId}
    </select>

    <!--<resultMap id="res" type="prdtimage">-->
    <!--<result property="imgId" column="img_id"></result>-->
    <!--<result property="imgType" column="img_type"></result>-->
    <!--<result property="imgUrl" column="img_url"></result>-->
    <!--</resultMap>-->
    <!--<select id="findAllByStatements" parameterType="string" resultType="string">-->
    <!--select * from t_product where  productName like #{statement}-->

    <!--</select>-->
    <resultMap id="img_product_category_list" type="prdtimage">
        <id property="imgId" column="imgId"></id>
        <result property="productId" column="pid"></result>
        <result property="imgType" column="imgType"></result>
        <result property="imgUrl" column="imgUrl"></result>
        <association property="product" column="pid"
                     select="com.github.webshop.dao.ProductMapper.findAllWithCategoryByProductId"
                     javaType="product"></association>
    </resultMap>
    <select id="findAllByStatements" resultMap="img_product_category_list" parameterType="string">
        select * from t_productimage where imgType=1 and pid in (select productId from t_product where  productName like #{statement})
    </select>

    <select id="getRowCount" resultType="integer">
        select count(*) from t_product
    </select>

    <select id="sortStock" resultMap="img_product_category_list"><!--连续的取值只能用${}-->
        select * from t_productimage pi,t_product p where pi.imgType=1 and pi.pid=p.productId order by ${field} ${order} limit #{row.start},#{row.limit}
    </select>

    <select id="get_index_product" resultMap="img_product_category_list">
        select * from
        t_productimage pi,t_product p,t_category c
        where pi.pid=p.productId
        and c.categoryId=p.cid
        and pi.imgType=1
        and p.cid in (select categoryId from t_category where categoryName=#{categoryName})
        limit #{start},#{limit}

    </select>

    <select id="findNameById" resultType="string" parameterType="integer">
        select productName from t_product where productId=#{pid}
    </select>
    <update id="updateStock">
        update t_product
        <set>
            stock=stock-#{number}
        </set>
        where productId=#{pid}
    </update>

    <select id="getStock">
        select stock from t_product where productId=#{pid}
    </select>
</mapper>